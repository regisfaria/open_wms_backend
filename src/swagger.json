{
  "openapi": "3.0.0",
  "info": {
    "title": "Rocketseat 1#Hackathon WMS Documentation",
    "description": "API for WMS, developed for the first Rocketseat Hackathon",
    "version": "1.0.0",
    "contact": {
      "email": "regisprogramming@gmail.com"
    }
  },
  "paths": {
    "/ping": {
      "get": {
        "tags": [
          "Ping"
        ],
        "summary": "Default route for testing if the API is working and live.",
        "description": "Default route for testing if the API is working and live.",
        "responses": {
          "200": {
            "description": "Pong",
            "success": true
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create one user",
        "description": "In this route you can create one user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/CreateUserPostBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Esse 'login/email/número de telefone' já está em uso"
          }
        }
      }
    },
    "/users/{id}": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update a logged user",
        "description": "In this endpoint you can update all user's infos. You can update one or all data at once. If password is to be changed, you must give currentPassword and newPassword. If no new data is given, server will throw an error.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/UpdateUserBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/UpdateUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Nenhum usuario encontrado com o ID fornecido."
          },
          "401": {
            "description": "Você precisa se autenticar para acessar esse recurso."
          }
        }
      }
    },
    "/users/verify/{token}": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Confirm user account",
        "description": "This endpoint expect it's confirmation token to confirm the user. It will send a new email if the token has expired.",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type":"object",
                  "properties": {
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sessions": {
      "post": {
        "tags": [
          "Sessions"
        ],
        "summary": "Authenticate User",
        "description": "Here you can make the authentication of an user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "login": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/SessionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Login ou senha incorretas."
          }
        }
      }
    },
    "/items": {
      "post": {
        "tags": [
          "Items"
        ],
        "summary": "Create one item",
        "description": "In this route you can create one item",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/CreateItemPostBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/ItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Item já cadastrado"
          },
          "401": {
            "description": "Você precisa se autenticar para acessar esse recurso."
          }
        }
      },
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "List all active user Items.",
        "description": "In this route you can list all active user items. You can also apply filters(measureUnity, category, name).",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Item Name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Item Category",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "measureUnity",
            "in": "query",
            "description": "Item Measure Unit",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/ListItemsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Você precisa se autenticar para acessar esse recurso."
          }
        }
      }
    },
    "/items/image/{id}": {
      "patch": {
        "tags": [
          "Items"
        ],
        "summary": "Update or save a new image from item",
        "description": "In this route you can update or insert one image from item",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Item ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/items/{id}": {
      "put": {
        "tags": [
          "Items"
        ],
        "summary": "Update item",
        "description": "In this route you can update item info",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Item ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/CreateItemPostBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/ItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Caso ja exista um item desse usuário com esse nome."
          },
          "401": {
            "description": "Você precisa se autenticar para acessar esse recurso."
          }
        }
      }
    },
    "/stocks/{type}": {
      "post": {
        "tags": [
          "Stocks"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "'input' || 'output'",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Create a new Stock",
        "description": "In this route you can create a new stock. expirationDate is expected as a 'YYYY-MM-DD' string.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/StockRecordBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/StockRecordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Se a quantidade for igual ou menor que zero, se a quantidade a ser removida menos o estoque menor que zero. Caso id do item seja invalido. Caso o valor seja menor que zero"
          },
          "401": {
            "description": "Você precisa se autenticar para acessar esse recurso."
          }
        }
      }
    },
    "/stocks/dashboard": {
      "get": {
        "tags": [
          "Stocks"
        ],
        "summary": "List stock dashboard data",
        "description": "Here you will list all stocks and useful information about it.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/StockDashboardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Se a quantidade for igual ou menor que zero, se a quantidade a ser removida menos o estoque menor que zero. Caso id do item seja invalido. Caso o valor seja menor que zero"
          },
          "401": {
            "description": "Você precisa se autenticar para acessar esse recurso."
          }
        }
      }
    }
  },
  "definitions": {
    "CreateUserPostBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "UserResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "UpdateUserBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        },
        "currentPassword": {
          "type": "string"
        }
      }
    },
    "UpdateUserResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "SessionsResponse": {
      "type": "object",
      "properties": {
        "user": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "login": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "id": {
              "type": "string"
            }
          }
        },
        "token": {
          "type": "string"
        }
      }
    },
    "CreateItemPostBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "measureUnity": {
          "type": "string"
        },
        "daysToNotifyExpirationDate": {
          "type": "number"
        },
        "minimumStock": {
          "type": "number"
        }
      }
    },
    "ItemResponse": {
      "type": "object",
      "properties": {
        "item": {
          "properties": {
            "userId": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "category": {
              "type": "string"
            },
            "minimumStock": {
              "type": "number"
            },
            "daysToNotifyExpirationDate": {
              "type": "number"
            },
            "measureUnity": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "createdAt": {
              "type": "string"
            },
            "updatedAt": {
              "type": "string"
            }
          }
        }
      }
    },
    "ListItemsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "category": {
                "type": "string"
              },
              "minimumStock": {
                "type": "number"
              },
              "daysToNotifyExpirationDate": {
                "type": "number"
              },
              "measureUnity": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "createdAt": {
                "type": "string"
              },
              "updatedAt": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "StockRecordBody": {
      "type": "object",
      "properties": {
        "itemId": {
          "type": "string",
          "required": true
        },
        "quantity": {
          "type": "number",
          "required": true
        },
        "value": {
          "type": "number",
          "required": true
        },
        "expirationDate": {
          "type": "string",
          "required": false
        }
      }
    },
    "StockRecordResponse": {
      "type": "object",
      "properties": {
        "itemId": {
          "type": "string"
        },
        "quantity": {
          "type": "number"
        },
        "value": {
          "type": "number"
        },
        "expirationDate": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "StockDashboardResponse": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "item": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "userId": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "category": {
                "type": "string"
              },
              "minimumStock": {
                "type": "number"
              },
              "daysToNotifyExpirationDate": {
                "type": "number"
              },
              "image": {
                "type": "number"
              },
              "imageUrl": {
                "type": "number"
              },
              "measureUnity": {
                "type": "string"
              },              
              "createdAt": {
                "type": "string"
              },
              "updatedAt": {
                "type": "string"
              }
            }
          },
          "totalQtd": {
            "type": "number"
          },
          "balance": {
            "type": "number"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}