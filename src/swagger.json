{
  "openapi": "3.0.0",
  "info": {
    "title": "Rocketseat 1#Hackathon WMS Documentation",
    "description": "API for WMS, developed for the first Rocketseat Hackathon",
    "version": "1.0.0",
    "contact": {
      "email": "regisprogramming@gmail.com"
    }
  },
  "paths": {
    "/ping": {
      "get": {
        "tags": [
          "Ping"
        ],
        "summary": "Default route for testing if the API is working and live.",
        "description": "Default route for testing if the API is working and live.",
        "responses": {
          "200": {
            "description": "Pong",
            "success": true
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create one user",
        "description": "In this route you can create one user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/CreateUserPostBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Esse 'login/email/número de telefone' já está em uso"
          }
        }
      }
    },
    "/users/{id}": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update a logged user",
        "description": "In this endpoint you can update all user's infos. You can update one or all data at once. If password is to be changed, you must give currentPassword and newPassword. If no new data is given, server will throw an error.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/UpdateUserBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/UpdateUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Nenhum usuario encontrado com o ID fornecido."
          },
          "401": {
            "description": "Você precisa se autenticar para acessar esse recurso."
          }
        }
      }
    },
    "/sessions": {
      "post": {
        "tags": [
          "Sessions"
        ],
        "summary": "Authenticate User",
        "description": "Here you can make the authentication of an user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "login": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/SessionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Login ou senha incorretas."
          }
        }
      }
    },
    "/items": {
      "post": {
        "tags": [
          "Items"
        ],
        "summary": "Create one item",
        "description": "In this route you can create one item",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/CreateItemPostBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/ItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Item já cadastrado"
          }
        }
      }
    }
  },
  "definitions": {
    "CreateUserPostBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "UserResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "UpdateUserBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        },
        "currentPassword": {
          "type": "string"
        }
      }
    },
    "UpdateUserResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "SessionsResponse": {
      "type": "object",
      "properties": {
        "user": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "login": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "id": {
              "type": "string"
            }
          }
        },
        "token": {
          "type": "string"
        }
      }
    },
    "CreateItemPostBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "measureUnity": {
          "type": "string"
        },
        "daysToNotifyExpirationDate": {
          "type": "number"
        },
        "minimumStock": {
          "type": "number"
        }
      }
    },
    "ItemResponse": {
      "type": "object",
      "properties": {
        "item": {
          "properties": {
            "userId": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "category": {
              "type": "string"
            },
            "minimumStock": {
              "type": "number"
            },
            "daysToNotifyExpirationDate": {
              "type": "number"
            },
            "measureUnity": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "createdAt": {
              "type": "string"
            },
            "updatedAt": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}